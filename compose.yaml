services:
  postgres:
    image: postgres:15
    x-defang-postgres: true
    environment:
      POSTGRES_PASSWORD:

  redis:
    image: redis:6.2
    x-defang-redis: true

  api:
    build:
      context: ./api
    domainname: api.connectier.app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      TMP: "none"
      DJANGO_SETTINGS_MODULE: config.settings
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=require
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SECRET_KEY:
      MISTRAL_API_KEY:
      ELEVEN_LABS_API_KEY:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  worker:
    build:
      context: ./api
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.5'
          memory: 2G
        limits:
          cpus: '0.5'
          memory: 2G
    command: uv run celery -A config worker -l info
    depends_on:
      - postgres
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=${SSL_MODE}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SECRET_KEY:
      MISTRAL_API_KEY:
      ELEVEN_LABS_API_KEY:
  ui:
    build:
      context: ./ui
      args:
        - NEXT_PUBLIC_API_URL=https://api.connectier.app
    domainname: connectier.app
    command: "npm run start"
    environment:
      NEXT_PUBLIC_API_URL: https://api.connectier.app
    ports:
      - "3000:3000"
    depends_on:
      - api

