# Generated by Django 4.2.21 on 2025-05-31 11:15

from django.db import migrations, models
import django.db.models.deletion
import pgvector.django.vector


class Migration(migrations.Migration):

    dependencies = [
        ('matching', '0002_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='chunk',
            name='document',
            field=models.ForeignKey(help_text='The document this chunk is extracted from', on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='matching.document'),
        ),
        migrations.AlterField(
            model_name='chunk',
            name='embedding',
            field=pgvector.django.vector.VectorField(dimensions=1024, help_text='Vector embedding generated by Mistral AI embed model'),
        ),
        migrations.AlterField(
            model_name='chunk',
            name='text',
            field=models.TextField(help_text='The text content of this chunk'),
        ),
        migrations.AlterField(
            model_name='context',
            name='entity_types',
            field=models.ManyToManyField(help_text='Entity types that can participate in this context', related_name='contexts', to='matching.entitytype'),
        ),
        migrations.AlterField(
            model_name='context',
            name='prompt',
            field=models.TextField(help_text='Instructions used for the matching process'),
        ),
        migrations.AlterField(
            model_name='context',
            name='resource',
            field=models.ForeignKey(help_text="The entity type that is being sought (e.g., 'investor')", on_delete=django.db.models.deletion.CASCADE, related_name='resource_contexts', to='matching.entitytype'),
        ),
        migrations.AlterField(
            model_name='context',
            name='seeker',
            field=models.ForeignKey(help_text="The entity type that is seeking matches (e.g., 'startup')", on_delete=django.db.models.deletion.CASCADE, related_name='seeker_contexts', to='matching.entitytype'),
        ),
        migrations.AlterField(
            model_name='context',
            name='tenant',
            field=models.ForeignKey(help_text='The tenant this context belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='contexts', to='matching.tenant'),
        ),
        migrations.AlterField(
            model_name='document',
            name='entity',
            field=models.ForeignKey(help_text='The entity this document describes', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='matching.entity'),
        ),
        migrations.AlterField(
            model_name='document',
            name='text',
            field=models.TextField(help_text='The complete text content of the document'),
        ),
        migrations.AlterField(
            model_name='document',
            name='title',
            field=models.CharField(blank=True, help_text='Optional title for the document', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='entity',
            name='context',
            field=models.ForeignKey(help_text='The matching context this entity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='matching.context'),
        ),
        migrations.AlterField(
            model_name='entity',
            name='entity_type',
            field=models.ForeignKey(help_text="The type of this entity (e.g., 'startup', 'investor')", on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='matching.entitytype'),
        ),
        migrations.AlterField(
            model_name='entity',
            name='tenant',
            field=models.ForeignKey(help_text='The tenant this entity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='matching.tenant'),
        ),
        migrations.AlterField(
            model_name='entitytype',
            name='tenant',
            field=models.ForeignKey(help_text='The tenant this entity type belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='entity_types', to='matching.tenant'),
        ),
    ]
