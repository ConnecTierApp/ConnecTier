version: "3.8"

services:
  postgres:
    extends:
      service: postgres
      file: compose.yaml
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    extends:
      service: redis
      file: compose.yaml

  api:
    extends:
      service: api
      file: compose.yaml
    command: ["./dev.sh"]
    volumes:
      - ./api:/app
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      DATABASE_URL: postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DEBUG: "True"

  worker:
    extends:
      service: worker
      file: compose.yaml
    volumes:
      - ./api:/app
    command: sh -c "uvx --from watchdog watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- uv run celery -A config worker -l info"
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      DATABASE_URL: postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DEBUG: "True"

  ui:
    extends:
      service: ui
      file: compose.yaml
    volumes:
      - ./ui:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000

volumes:
  pgdata:
